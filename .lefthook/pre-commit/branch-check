#!/usr/bin/env bash

# Branch-Check
# Helper script for validating the branch a contributor
# is using prior to committing any code changes.
#
# Includes:
# - Sanity Checks for Git environment (ensure it is configured)
# This does come with several dependencies
# 1. The availability of the BASH shell
# 2. The pre-configuration of several environment variables
#    - JIRA_DOMAIN- this is the custom domain before atlassian.net in your company's Jira URL
#    - JIRA_TOKEN - this is the base64 encoded value of your Jira username and API token

#----------------------------------------------------
# TODO: Add support for checking for Github issues
# TODO: Investigate adding support for Bitbucket Cloud issues
# TODO: Investigate adding support for Gitlab Cloud issues
# TODO: Investigate adding support for Gitea issues
#----------------------------------------------------

# Update this to contain the name(s) of your protected branches
declare -a protected_branches=("develop" "main")

# Get the current branch
current_branch="$(git rev-parse --abbrev-ref HEAD)"

# Get the origin for the branch
current_origin="$(git remote get-url origin)"

# shellcheck disable=SC2120
check_protected_branches() {
  # only check commit messages on main development branch
  for branch in "${protected_branches[@]}"
  do
    if [ "$current_branch" = "$branch" ]; then
      echo -e "  Current branch ${current_branch} matches a protected branch.\n  Please change the branch and commit again."
      exit 1
    fi
  done
}

# shellcheck disable=SC2120
check_for_jira_ticket() {
  # Check if there is a matching JIRA issue in an
  # associated Atlassian Jira Account
  web_check=$(curl -s -o /dev/null -w "%{http_code}" --request GET \
    -H "Authorization: Basic $JIRA_TOKEN" \
    --url "https://${JIRA_DOMAIN}.atlassian.net/rest/api/3/issue/${current_branch}" \
    --header 'Accept: application/json')
  
  if [ "$web_check" -ne 200 ]; then
    echo -e "  Branch name does not match an existing Jira ticket ID.\n  Please double check and confirm that you have permission to view the ticket."
    exit 1
  fi
}

# Check if we're trying to commit to a protected branch
check_protected_branches "$protected_branches"

if [ -z "$JIRA_TOKEN" ] && [ -z "$JIRA_DOMAIN" ]; then
  echo "JIRA_TOKEN and JIRA DOMAIN were not defined\
  in your shell, skipping Jira check to \
  verify that the branch matches an existing ticket."
elif [ -z "$JIRA_TOKEN" ]; then
  echo "JIRA_TOKEN was not defined in your shell, but\
   JIRA_DOMAIN was found.  Please check your environment."
elif [ -z "$JIRA_DOMAIN" ]; then
  echo "JIRA_DOMAIN was not defined in your shell, but\
   JIRA_TOKEN was found.  Please check your environment."
else
  if ! echo "$current_branch" | grep "NO-TICKET" &> /dev/null; then
    check_for_jira_ticket
  fi
fi

# if echo "${current_origin}" | grep "git\@github.com" &> /dev/null; then
#   echo "  Checking for Github configuration checks..."
# fi
